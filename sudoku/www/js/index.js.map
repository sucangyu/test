{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/core/toolkit.js","webpack:///./js/ui/popupnumbers.js","webpack:///./js/core/generator.js","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/sudoku.js","webpack:///./js/core/checker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","marrixToolkit","makeRow","v","arguments","length","undefined","array","Array","fill","makeMatrix","_this","this","from","shuffle","endIndex","j","Math","floor","random","_ref","checkFillable","matrix","rowIndex","colIndex","row","column","map","boxIndex","boxToolkit","convertToBoxIndex","box","getBoxCells","starRowIndex","starColIndex","result","cellIndex","push","convertFromBoxIndex","cellInderx","Tollkit","_classCallCheck","_createClass","PopupNumbers","$panel","_$panel","hide","removeClass","on","e","$cell","_$targetCell","$span","$","target","hasClass","addClass","text","_$cell$position","position","left","top","css","show","Toolkit","require","Generator","internalGenerate","console","warn","orders","fillNumber","fillRow","Grid","Popupnumbers","grid","build","layout","popupnumbers","bindPopup","check","alert","reset","clear","rebuild","Sudoku","Checker","container","_$container","sudoku","make","puzzleMatrix","rowGroupClasses","colGroupClasses","$divArray","rowValues","cellValue","$spanArray","append","width","height","line-height","font-size","data","children","div","sapn","parseInt","toArray","$data","checker","marks","matrixMarks","each","span","is","find","empty","popupNumbers","popup","generator","generate","solutionMatrix","level","cell","checkArray","_matrix","_matrixMarks","checkRows","checkCols","checkBoxes","_success","every","mark","cols","_Toolkit$box$convertF"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\r\n *矩阵和数组相关工具\r\n * @type {{makeRow, makeMatrix, shuffle}}\r\n */\r\nconst marrixToolkit = {\r\n    makeRow(v=0) {\r\n        const array = new Array(9);\r\n        array.fill(v);\r\n        return array;\r\n    },\r\n\r\n    makeMatrix(v=0) {\r\n        return Array.from({length:9},()=>this.makeRow(v))\r\n    },\r\n\r\n    /**\r\n     * 对传入数组进行随机排序,然后把这个数组返回来\r\n     * Fisher-Yates 洗牌算法\r\n     */\r\n    shuffle(array) {\r\n        const endIndex = array.length-2;\r\n        for (let i=0;i<=endIndex;i++){\r\n            const j = i + Math.floor(Math.random()*(array.length - i));\r\n            [array[i],array[j]] = [array[j],array[i]];\r\n        }\r\n        return array;\r\n    },\r\n\r\n    /**\r\n     *TODD 检查指定位置是否可以填数字n\r\n     */\r\n    checkFillable(matrix,n,rowIndex,colIndex){\r\n        const row = matrix[rowIndex];\r\n        const column = this.makeRow().map((v,i)=>matrix[i][colIndex]);\r\n        const { boxIndex } = boxToolkit.convertToBoxIndex(rowIndex,colIndex);\r\n        const box = boxToolkit.getBoxCells(matrix,boxIndex);\r\n        for (let i = 0;i<9;i++){\r\n            if(row[i] === n\r\n                || column[i] ===n\r\n                || box[i]===n)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n *宫坐标系工具\r\n * @type {{getBoxCells, convertToBoxIndex, convertFromBoxIndex}}\r\n */\r\nconst boxToolkit={\r\n    //TODD\r\n    getBoxCells(matrix,boxIndex){\r\n        const starRowIndex = Math.floor(boxIndex / 3) * 3;//得到方格行坐标\r\n        const starColIndex = boxIndex % 3 * 3;//得到方格列坐标\r\n        const result = []//准备一个数组存放取出来的9个值\r\n        for (let cellIndex = 0;cellIndex < 9;cellIndex++) {\r\n            const rowIndex = starRowIndex + Math.floor(cellIndex/3);//起始位置+偏移量\r\n            const colIndex = starColIndex + cellIndex % 3;//起始位置+偏移量\r\n            result.push(matrix[rowIndex][colIndex]);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    convertToBoxIndex(rowIndex,colIndex){\r\n        return {\r\n            boxIndex:Math.floor(rowIndex / 3) * 3 +Math.floor(colIndex / 3),\r\n            cellIndex:rowIndex % 3 *3 + colIndex %3\r\n        };\r\n    },\r\n\r\n    convertFromBoxIndex(boxIndex,cellInderx){\r\n        return {\r\n            rowIndex:Math.floor(boxIndex / 3) * 3 + Math.floor(cellInderx / 3),\r\n            colIndex:boxIndex % 3 * 3 + cellInderx % 3\r\n        }\r\n    }\r\n}\r\n//工具集\r\n\r\nmodule.exports = class Tollkit{\r\n    /**\r\n     * 矩阵和数组相关工具\r\n     * @returns {{makeRow, makeMatrix, shuffle}}\r\n     */\r\n    static get matrix(){\r\n        return marrixToolkit;\r\n    }\r\n\r\n    /**\r\n     * 宫坐标系相关工具\r\n     * @returns {{makeRow, makeMatrix, shuffle}}\r\n     */\r\n    static get box(){\r\n        return boxToolkit;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//处理弹出的操作面板\r\n\r\nmodule.exports = class PopupNumbers{\r\n    constructor($panel){\r\n        this._$panel = $panel.hide().removeClass(\"hidden\");\r\n\r\n        this._$panel.on(\"click\",\"span\",e=>{\r\n            const $cell = this._$targetCell;\r\n        const $span = $(e.target);\r\n        if (!$cell.hasClass(\"fixed\")){\r\n            //mark1.mark2 回填样式\r\n            if ($span.hasClass(\"mark1\")){\r\n                if($cell.hasClass(\"mark1\")){\r\n                    $cell.removeClass(\"mark1\");\r\n                }else{\r\n                    $cell.removeClass(\"mark2\")\r\n                        .addClass(\"mark1\");\r\n                }\r\n            }else if ($span.hasClass(\"mark2\")){\r\n                if($cell.hasClass(\"mark2\")){\r\n                    $cell.removeClass(\"mark2\");\r\n                }else{\r\n                    $cell.removeClass(\"mark1\")\r\n                        .addClass(\"mark2\");\r\n                }\r\n            }else if ($span.hasClass(\"empty\")){\r\n                //empty,取消数字填写 取消make\r\n                $cell.text(0)\r\n                    .addClass(\"empty\");\r\n            }else{\r\n                //1-9,回填数字\r\n                $cell.removeClass(\"empty\")\r\n                    .text($span.text());\r\n            }\r\n        }\r\n        this.hide();\r\n    });\r\n    }\r\n\r\n    popup($cell){\r\n        this._$targetCell=$cell;\r\n        const{ left,top }=$cell.position();\r\n        this._$panel\r\n            .css({\r\n                left:`${left}px`,\r\n                top:`${top}px`\r\n            })\r\n            .show();\r\n    }\r\n\r\n    hide(){\r\n        this._$panel.hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//生成数独解决方案\r\nconst Toolkit = require(\"./toolkit\");\r\n\r\nmodule.exports = class Generator{\r\n    generate(){\r\n        while (!this.internalGenerate()){\r\n            //尝试的次数显示\r\n            console.warn(\"try again\");\r\n        }\r\n    }\r\n    internalGenerate(){\r\n        //TODD 入口方法\r\n        this.matrix = Toolkit.matrix.makeMatrix();\r\n        this.orders = Toolkit.matrix.makeMatrix()\r\n            .map(row=>row.map((v,i)=>i))\r\n            .map(row=>Toolkit.matrix.shuffle(row));//生成随机矩阵\r\n\r\n        for (let n =1;n<=9;n++){\r\n            if (!this.fillNumber(n)){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    fillNumber(n){\r\n        return this.fillRow(n,0);\r\n    }\r\n\r\n    fillRow(n,rowIndex){\r\n        if (rowIndex>8){\r\n            return true;//成功结束\r\n        }\r\n\r\n        const row = this.matrix[rowIndex];\r\n        //TODD 随机选择列\r\n        const orders = this.orders[rowIndex];\r\n        for (let i = 0;i < 9;i++) {\r\n            const  colIndex = orders[i];\r\n            //如果这个位置已经优质,跳过\r\n            if(row[colIndex]){\r\n                continue;\r\n            }\r\n            //检查这个位置是否可以填 n\r\n            if(!Toolkit.matrix.checkFillable(this.matrix,n,rowIndex,colIndex)){\r\n                continue;\r\n            }\r\n            row[colIndex] = n;\r\n            //当前行填写 n 成功,递归调用fillRow() 来在下一行中填写n\r\n            //去下一行填写n,如果没填写,就继续寻找当前行下一个位置\r\n            if(!this.fillRow(n,rowIndex+1)){\r\n                row[colIndex] = 0;\r\n                continue;\r\n            }\r\n\r\n            return true;//填写成功\r\n        }\r\n\r\n        return false;//填写失败\r\n    }\r\n};\r\n\r\n/*const generator = new Generator();\r\ngenerator.generate();\r\nconsole.log(generator.matrix)*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const Grid = require(\"./ui/grid\");\r\nconst Popupnumbers = require(\"./ui/popupnumbers\");\r\n\r\nconst grid = new Grid($(\"#container\"));\r\ngrid.build();\r\ngrid.layout();\r\n\r\nconst popupnumbers = new Popupnumbers($(\"#popupNumbers\"));\r\ngrid.bindPopup(popupnumbers);\r\n\r\n//按钮组\r\n$(\"#check\").on(\"click\",e=>{\r\n    if(grid.check()){\r\n        alert(\"成功了\");\r\n    }\r\n});\r\n$(\"#reset\").on(\"click\",e=>{\r\n    grid.reset();\r\n});\r\n$(\"#clear\").on(\"click\",e=>{\r\n    grid.clear();\r\n});\r\n$(\"#rebuild\").on(\"click\",e=>{\r\n    grid.rebuild();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//生成九宫格\r\nconst Toolkit = require(\"../core/toolkit\");\r\nconst Generator = require(\"../core/generator\");\r\nconst Sudoku = require(\"../core/sudoku\");\r\nconst Checker = require(\"../core/checker\");\r\n\r\nclass Grid{\r\n    constructor(container){\r\n        this._$container = container;\r\n    }\r\n\r\n    build(){\r\n\r\n        /*const matrix = Toolkit.matrix.makeMatrix();//方法1\r\n        const generator = new Generator();\r\n        generator.generate();\r\n        const matrix = generator.matrix;//生成完整盘*/\r\n        const sudoku = new Sudoku();\r\n        sudoku.make();\r\n        // const matrix = sudoku.solutionMatrix;//完整成盘\r\n        const matrix = sudoku.puzzleMatrix;//生成随机去掉数字的数独盘\r\n        const rowGroupClasses = [\"row_g_top\",\"row_g_middle\",\"row_g_bottom\"];\r\n        const colGroupClasses = [\"col_g_left\",\"col_g_center\",\"col_g_right\"];\r\n\r\n        const $cells = matrix.map(rowValues => rowValues\r\n            .map((cellValue,colIndex) => {\r\n            return $(\"<span>\")\r\n                .addClass(colGroupClasses[colIndex % 3])\r\n                .addClass(cellValue ? \"fixed\" : \"empty\")\r\n                .text(cellValue);\r\n        }));\r\n\r\n        const $divArray = $cells.map(($spanArray,rowIndex) => {\r\n            return $(\"<div>\")\r\n                .addClass(\"row\")\r\n                .addClass(rowGroupClasses[rowIndex % 3])\r\n                .append($spanArray);\r\n        });\r\n\r\n        this._$container.append($divArray);\r\n    }\r\n    //数独盘数字span样式\r\n    layout(){\r\n        const width = $(\"span:first\",this._$container).width();\r\n        $(\"span\",this._$container)\r\n            .height(width)\r\n            .css({\r\n                \"line-height\": `${width}px`,\r\n                \"font-size\": width < 32 ? `${width / 2}px` : \"\"\r\n            });\r\n    }\r\n\r\n    //检测用户解密结果,成功提示,失败显示错误位置\r\n    check(){\r\n        //重界面获取要检查的数据\r\n        const data = this._$container.children()\r\n            .map((rowIndex,div)=>{\r\n                return $(div).children()\r\n                    .map((colIndex,sapn)=>parseInt($(sapn).text()) || 0);\r\n            })\r\n            .toArray()\r\n            .map($data=>$data.toArray());\r\n        // console.log(data);\r\n        const checker = new Checker(data);\r\n        if(checker.check()){\r\n            return true;\r\n        }\r\n\r\n        //检查不成功进行标记\r\n        const marks = checker.matrixMarks;\r\n        this._$container.children()\r\n            .each((rowIndex,div)=>{\r\n                $(div).children().each((colIndex,span)=>{\r\n                    const $span = $(span);\r\n                    if ($span.is(\".fixed\") || marks[rowIndex][colIndex]) {\r\n                        //如果是盘底或者数值正确\r\n                        $span.removeClass(\"error\");\r\n                    }else{\r\n                        $span.addClass(\"error\");\r\n                    }\r\n                });\r\n            });\r\n\r\n    }\r\n    //重置当前迷盘到初始状态\r\n    reset(){\r\n        this._$container.find(\"span:not(.fixed)\")\r\n            .removeClass(\"error mark1 mark2\")\r\n            .addClass(\"empty\")\r\n            .text(0);\r\n    }\r\n    //清理错误标记\r\n    clear(){\r\n        this._$container.find(\"span.error\")\r\n            .removeClass(\"error\");\r\n    }\r\n    //重建刷新\r\n    rebuild(){\r\n        this._$container.empty();\r\n        this.build();\r\n        this.layout();\r\n    }\r\n    //弹出数字面板\r\n    bindPopup(popupNumbers){\r\n        this._$container.on(\"click\",\"span\",e=>{\r\n            const $cell=$(e.target);\r\n            if (!$cell.hasClass(\"fixed\")) {\r\n                popupNumbers.popup($cell);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Grid;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//生成数独游戏\r\nconst Generator = require(\"./generator\");\r\n\r\n//1:生成完成的解决方案:Generator\r\n//2:随机去除部分数据:按比例\r\n\r\nmodule.exports = class Sudoku{\r\n    constructor(){\r\n        //生成完成的解决方案\r\n        const generator = new Generator();\r\n        generator.generate();\r\n        this.solutionMatrix=generator.matrix;\r\n    }\r\n    //level难度,level = 5随机去掉4个数中档难度\r\n    make(level = 4){\r\n        //const shouldRid = Math.random() * 9 < level;\r\n        //生成迷盘\r\n        this.puzzleMatrix = this.solutionMatrix.map(row=>{\r\n            return row.map(cell => Math.random() * 9 < level ? 0 : cell);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//检查数据解决方案\r\n\r\nfunction checkArray(array) {\r\n    const length = array.length;\r\n    const marks = new Array(length);//检查完生成错误标记的数组\r\n    marks.fill(true);//初始化\r\n\r\n    for (let i=0;i<length;i++){\r\n        if (!marks[i]){\r\n            continue;//如果已经检查过是false结束\r\n        }\r\n\r\n        const v=array[i];\r\n        //1:检查是否有效,0 - 无效,1-9 有效\r\n        if(!v){\r\n            marks[i] = false;\r\n            continue;\r\n        }\r\n        //2:检查是否有重复:i+1--9,是否和i位置的数据重复\r\n        for (let j=i+1;j<length;j++){\r\n            if(v===array[j]){\r\n                marks[i]=marks[j]=false;\r\n            }\r\n        }\r\n    }\r\n    return marks;\r\n}\r\n\r\nconst Toolkit = require(\"./toolkit\");\r\n/**\r\n * 输入:matrix,用户完成的数独数据,9*9\r\n * 处理:对martrix 行 列 宫进行检查,并填写marks\r\n * 输出:检查是否成功 marks\r\n */\r\nmodule.exports = class Checker{\r\n    constructor(matrix){\r\n        this._matrix = matrix;\r\n        this._matrixMarks = Toolkit.matrix.makeMatrix(true);\r\n    }\r\n\r\n    get matrixMarks(){\r\n        return this._matrixMarks;\r\n    }\r\n    //二次检查\r\n    get isSuccess(){\r\n        return this._success;\r\n    }\r\n\r\n    check(){\r\n        this.checkRows();//检查行\r\n        this.checkCols();//检查列\r\n        this.checkBoxes();//检查宫\r\n\r\n        //检查是否成功\r\n        this._success = this._matrixMarks.every(row => row.every(mark => mark));\r\n        return this._success;\r\n    }\r\n\r\n    //检查行\r\n    checkRows(){\r\n        for (let rowIndex = 0;rowIndex < 9;rowIndex++){\r\n            const row = this._matrix[rowIndex];\r\n            const marks = checkArray(row);\r\n\r\n            for (let colIndex=0;colIndex<marks.length;colIndex++){\r\n                if(!marks[colIndex]){\r\n                    this._matrixMarks[rowIndex][colIndex] = false;//标记这一行这一列为false\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //检查列\r\n    checkCols(){\r\n        //1:生成列数据\r\n        for (let colIndex=0;colIndex<9;colIndex++) {\r\n            const cols = [];\r\n            for (let rowIndex=0;rowIndex<9;rowIndex++){\r\n                cols[rowIndex]=this._matrix[rowIndex][colIndex];\r\n            }\r\n            //进行列检查\r\n            const marks = checkArray(cols);\r\n            for(let rowIndex=0;rowIndex<marks.length;rowIndex++){\r\n                if(!marks[rowIndex]){\r\n                    this._matrixMarks[rowIndex][colIndex]=false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //检查宫\r\n    checkBoxes(){\r\n        //1:生成宫数据\r\n        for (let boxIndex=0;boxIndex<9;boxIndex++){\r\n            const boxes=Toolkit.box.getBoxCells(this._matrix,boxIndex);\r\n            const marks=checkArray(boxes);\r\n            //1.2:进行坐标转换\r\n            for (let cellIndex=0;cellIndex<9;cellIndex++){\r\n                if(!marks[cellIndex]){\r\n                    const { rowIndex,colIndex } = Toolkit.box.convertFromBoxIndex(boxIndex,cellIndex);\r\n                    this.matrixMarks[rowIndex][colIndex] =  false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/*//验证\r\nconst Generator = require(\"./generator\");\r\nconst gen = new Generator();\r\ngen.generate();\r\nconst matrix = gen.matrix;\r\n\r\nconst checker = new Checker(matrix);\r\nconsole.log(\"check result\", checker.check());\r\nconsole.log(checker.matrixMarks);\r\n\r\nmatrix[1][1]=0;\r\nmatrix[2][3]=matrix[3][5]=5;\r\nconst checker2 = new Checker(matrix);\r\nconsole.log(\"check result\", checker2.check());\r\nconsole.log(checker2.matrixMarks);*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}